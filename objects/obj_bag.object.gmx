<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bag</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2000</depth>
  <persistent>0</persistent>
  <parentName>Window</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

item_drag = false;
item_drag_index = 0;
bag_full = false;

force_self = 10;
intellect_self = 10;
income_self = 200;  

item_index = 0;
item_describe = "";
item_effect = "";
item_attribute = "";
item_type = -1;
item_value = 0;

// 初始化物品信息
var i, j, temp_string;
for( i = 0; i &lt; 36; i += 1 )
{
    item_data[i, ITEM_INDEX] = 0;            // 物品编号
    item_data[i, ITEM_DESCRIBE] = "";        //物品描述
    item_data[i, ITEM_EFFECT] = "";          // 物品效果
    item_data[i, ITEM_ATTRIBUTE] = "";       // 物品属性
    item_data[i, ITEM_NUM] = 0;             // 物品数据
    item_data[i, ITEM_TYPE] = -1;            // 物品类型
    item_data[i, ITEM_VALUE] = 0;           // 物品价值
}

// 初始化背包内物品的位置信息
for( i = 0; i &lt; 36; i += 1 )
{
    item_site[i, ITEM_INDEX] = 0;
    item_site[i, ITEM_NUM] = 0;
}

// 加载物品的各种信息
file = file_text_open_read(working_directory + "\item_data.txt");
for( i = 1; i &lt;= 16; i += 1 )
{
    temp_string = file_text_read_string(file)
    file_text_readln(file);
    separate_information(temp_string);
    give_items(i, real(item_index), item_describe, item_effect, item_attribute, real(item_type), real(item_value));
}
file_text_close(file);

switch( global.choose_index )
{
    case 1: player_money = obj_xiana.money;
            break;
    case 2: player_money = obj_zhi.money;
            break;
}


// 物品编号， 数量
add_items(1, 1);
add_items(2, 1);
add_items(3, 1);
add_items(4, 10);
add_items(5, 10);
add_items(6, 10);
add_items(13, 1);
add_items(16, 1);

// 初始化物品添加脚本
global.acquire_number = 0;
for( i = 0; i &lt; 10; i += 1 )
{
    global.acquire_item[i] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( !visiable )
{
    drag = false;
    exit;
}

// 如果选中的窗口在当前窗口的后方，则让选中的窗口在最前面显示
if( mouse_check_button_pressed(mb_left) &amp;&amp; mouse_in_relion(x, y, x + 238, y + 253) )
{
    // 如果当前窗口在选中窗口的前面，则不用改变深度
    if( obj_equipment.visiable &amp;&amp; depth &gt; obj_equipment.depth &amp;&amp; position_meeting(mouse_x, mouse_y, obj_equipment) )
    {
        exit;
    }
    if( obj_mission.visiable &amp;&amp; depth &gt; obj_mission.depth &amp;&amp; position_meeting(mouse_x, mouse_y, obj_mission) )
    {
        exit;
    }
    depth = min(obj_equipment.depth, obj_mission.depth) - 1;
    
    // 记录鼠标在当前窗口的相对位置
    if( mouse_in_relion(x, y, x + 220, y +20) )
    {
        drag = true;
        xoff = mouse_x - x;
        yoff = mouse_y - y;
    }
    // 关闭当前窗口
    if( mouse_in_relion(x+220, y, x+238, y+16) )
    {
        visiable = !visiable;
    }
}

if( drag )
{
    x = mouse_x - xoff;
    y = mouse_y - yoff;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( !visiable )
{
    exit;
}

if( drag )
{
    x = mouse_x - xoff;
    y = mouse_y - yoff;
    drag = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( !visiable )
{
    exit;
}
event_inherited();

draw_sprite(sprite_index, image_index, x, y);

// 显示人物持有的金币数量
draw_set_font(font_money);
draw_text(x + 70, y + 230, player_money);
draw_set_font(font_text);
// 窗口拖动
draw_text(x + 10, y + 3, "背包");
if( drag )
{
    draw_text(x + 100, y + 3, "(拖动)");
}
// 显示物品信息
var i, j;
j = 0
// 先遍历背包显示物品图标，防止物品信息显示框无法遮住物品图标
for( i = 0; i &lt; 36; i += 1 )
{
    if( j == 6 )
    {
        j = 0;
    }
    // 显示物品图标
    draw_sprite(spr_items, item_data[item_site[i,ITEM_INDEX], ITEM_INDEX], x+8+j*32, y+40+floor(i/6)*32);
    // 只让消耗品显示数量
    if( item_data[item_site[i,ITEM_INDEX], ITEM_INDEX] &lt;= 69 &amp;&amp; item_data[item_site[i,ITEM_INDEX], ITEM_INDEX] &gt;= 1 /*&amp;&amp; item_site[i, ITEM_NUM] != 1 */)
    {
        draw_set_font(font_item_num);
        draw_set_colour(c_lime);
        draw_text(x+38+j*32 - string_width(string(item_site[i, ITEM_NUM])), y+75+floor(i/6)*32 - string_height(string(item_site[i, ITEM_NUM])), string(item_site[i, ITEM_NUM]));
    }
    j += 1;
            
}

draw_set_font(font_text);
draw_set_colour(c_black);
var temp_drag, max_width, temp_equip, equip_x, equip_y, text_length, item_attribute, text_type_length;
temp_drag = false;
temp_equip = false;

j = 0;
for( i = 0; i &lt; 36; i += 1 )
{
    if( j == 6 )
    {
        j = 0;
    }
        max_width = 200
        // 防止在拖动物品或拖动装备栏窗口时，显示物品信息
        if( !obj_equipment.drag )
        {
            // 当鼠标指向物品时，显示物品的详细信息
            if( mouse_in_relion( x+8+(j*32), y+40+floor(i/6)*32, x+8+(j*32)+32, y+40+floor(i/6)*32+32 ) /*&amp;&amp; depth == min(obj_mission.depth, obj_equipment.depth, depth)*/ )
            {
                if( item_site[i, ITEM_INDEX] )
                {
                    var index, item_type;
                    index =  0;
                    count = separate_attribute(item_data[item_site[i, ITEM_INDEX],ITEM_EFFECT]);
                    item_type = display_item_type(item_data[item_site[i, ITEM_INDEX], ITEM_TYPE]);
                    if( !count )
                    {
                        count = 1;
                    }
                    text_length = string_length(item_data[item_site[i,  ITEM_INDEX], ITEM_DESCRIBE]);
                    text_height = string_height(item_data[item_site[i,  ITEM_INDEX], ITEM_DESCRIBE]);
                    text_type_length = string_length(item_type);
                    // 显示物品选中框
                    draw_rectangle_colour(x+8+(j*32), y+40+floor(i/6)*32, x+8+(j*32)+32, y+40+floor(i/6)*32+32, c_fuchsia, c_fuchsia, c_fuchsia, c_fuchsia, true);
                    if( x+8+( j*32 )+max_width+5  &gt; view_xview+640 ) 
                    {   
                        // 物品显示框
                        draw_rectangle_colour(x+8+(j*32)+32-max_width, y+40+floor(i/6)*32+32, x+8+(j*32)+32, y+40+floor(i/6)*32+32+100+text_height*count, c_white, c_white, c_gray, c_gray, false);
                        // 物品的名字
                        draw_text(x+8+(j*32)+32+(max_width/2-20*(text_length/2))-max_width, y+40+floor(i/6)*32+32, item_data[item_site[i, ITEM_INDEX],ITEM_DESCRIBE]);
                        // 物品的种类
                        draw_text(x+8+(j*32)+32-max_width+(max_width-text_type_length*20), y+40+floor(i/6)*32+32+30, item_type);
                        // 分割线
                        draw_line_colour(x+8+(j*32)+32-max_width, y+40+floor(i/6)*32+32+30, x+8+(j*32)+32, y+40+floor(i/6)*32+32+30, c_teal, c_teal);
                        // 物品的详细信息
                        if( count-1 )
                        {
                            for( index = 0; index &lt; count; index += 1)
                            {
                                draw_text(x+8+(j*32)+32-max_width, y+40+floor(i/6)*32+32+50+string_height(variable[index])*index, variable[index]);
                            }
                        }
                        else
                        {
                           draw_text(x+8+(j*32)+32-max_width, y+40+floor(i/6)*32+32+50, item_data[item_site[i, ITEM_INDEX],ITEM_EFFECT]);
                          
                        }
                        // 分割线
                        draw_line_colour(x+8+(j*32)+32-max_width, y+40+floor(i/6)*32+32+70+text_height*count, x+8+(j*32)+32, y+40+floor(i/6)*32+32+70+text_height*count, c_teal, c_teal);
                        // 物品的出售价格
                        draw_text(x+8+(j*32)+32-max_width, y+40+floor(i/6)*32+32+80+text_height*count, string("出售价格：")+string(item_data[item_site[i, ITEM_INDEX], ITEM_VALUE]/4) );
                    }
                    else
                    {
                        // 物品显示框
                        draw_rectangle_colour(x+8+(j*32)+32, y+40+floor(i/6)*32+32, x+8+(j*32)+32+max_width, y+40+floor(i/6)*32+32+100+text_height*count, c_white, c_white, c_gray, c_gray, false);
                        // 物品的名字
                        draw_text(x+8+(j*32)+32+(max_width/2-20*(text_length/2)), y+40+floor(i/6)*32+32, item_data[item_site[i, ITEM_INDEX],ITEM_DESCRIBE]);
                        // 物品的种类
                        draw_text(x+8+(j*32)+32+(max_width-text_type_length*20), y+40+floor(i/6)*32+32+30, item_type);
                        // 分割线
                        draw_line_colour(x+8+(j*32)+32, y+40+floor(i/6)*32+32+30, x+8+(j*32)+32+max_width, y+40+floor(i/6)*32+32+30, c_teal, c_teal);
                        // 物品的详细信息
                        if( count-1 )
                        {
                            for( index = 0; index &lt; count; index += 1)
                            {
                                draw_text(x+8+(j*32)+32, y+40+floor(i/6)*32+32+50+string_height(variable[index])*index, variable[index]);//item_data[item_site[i, ITEM_INDEX],ITEM_EFFECT]
                            }
                        }
                        else
                        {
                            draw_text(x+8+(j*32)+32, y+40+floor(i/6)*32+32+50, item_data[item_site[i, ITEM_INDEX],ITEM_EFFECT]);
                            
                        }
                        // 分割线
                        draw_line_colour(x+8+(j*32)+32, y+40+floor(i/6)*32+32+70+text_height*count, x+8+(j*32)+32+max_width, y+40+floor(i/6)*32+32+70+text_height*count, c_teal, c_teal);
                        // 显示物品的出售价格
                        draw_text(x+8+(j*32)+32, y+40+floor(i/6)*32+32+80+text_height*count, string("出售价格：")+string(item_data[item_site[i, ITEM_INDEX], ITEM_VALUE]/4) );
                    }
                    
                }
                    
                if( mouse_check_button_released(mb_right) &amp;&amp; item_site[i, ITEM_INDEX] &amp;&amp; !global.trading_window_exists)
                {
                    if( instance_exists(obj_shop) )
                    {
                        trading_items(i, SELL);
                    }
                    else
                    {
                        using_item(i, 1);
                    }
                }
                     
                if( mouse_check_button_pressed(mb_left) &amp;&amp; item_site[i, ITEM_INDEX] &amp;&amp; !global.trading_window_exists )
                {
                    item_drag = true;
                    item_drag_index = i;
                }
                if( mouse_check_button_released(mb_left) &amp;&amp; item_drag &amp;&amp; !global.trading_window_exists)
                {
                    item_drag = false;
                    switch_bagitem(item_drag_index, i);
                }  
            }
            j += 1;
        }
}

if( item_drag )
{
    draw_sprite(spr_items, item_data[item_site[item_drag_index, ITEM_INDEX],ITEM_INDEX], mouse_x-17, mouse_y-17);
}
var using_num, selling_num, money_enough;
money_enough = false;
// 在背包外松开鼠标
if( mouse_check_button_released(mb_left) &amp;&amp; item_drag)
{
    if( mouse_in_relion(obj_equipment.x, obj_equipment.y, obj_equipment.x+238, obj_equipment.y+253) &amp;&amp; obj_equipment.visiable )
    {
        if( item_site[item_drag_index, ITEM_NUM] != 1 )
        {
            using_item(item_drag_index, item_site[item_drag_index, ITEM_NUM]);
        }
        else if( item_data[item_site[item_drag_index, ITEM_INDEX], ITEM_TYPE] != 5 )
        {
            using_item(item_drag_index, 1);
        }
    }
    
    // 如果在除背包格子外的地方松开鼠标，则中止拖动状态，置拖动坐标为（-1，-1）
    item_drag = false;
    item_drag_index = -1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>124,124</point>
  </PhysicsShapePoints>
</object>
