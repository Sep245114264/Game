<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_test</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>num_total = 0;
num_one = 0;
num_ten = 0;
num_hundred = 0;
acess = false;
max_limit = 0;
trade_action = 0;
choose_item = 0;
depth = min(obj_shop.depth, obj_bag.depth) - 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>num_total = 0;
num_one = 0;
num_ten = 0;
num_hundred = 0;
acess = false;
max_limit = 0;
trade_action = 0;
choose_item = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 增加物品数量
if( mouse_in_relion(x+186, y+5, x+237, y+41) ) 
{
    if( mouse_check_button_pressed(mb_left) )
    {  
        acess = true;
        pressed_first = current_time;
        num_total += 1;
        if( num_total &gt; max_limit )
        {
            num_total = max_limit;
        }
        separate_number(num_total);
    }
    if( mouse_check_button_released(mb_left) )
    {
        acess = false;
    }
    if( mouse_lastbutton == mb_left &amp;&amp; acess)
    {
        pressed_second = current_time;
        if( pressed_second - pressed_first &gt; 1000 )
        {
            num_total += 1;
            if( num_total &gt; max_limit )
            {
                num_total = max_limit;
            }
            separate_number(num_total);
            if( mouse_check_button_released(mb_left) )
            {
                acess = false;
            }
        }
    }
}
else if( !mouse_in_relion(x+186, y+53, x+238, y+91) )
{
    acess = false;
}

// 减少物品数量
if( mouse_in_relion(x+186, y+53, x+238, y+91) ) 
{
    if( mouse_check_button_pressed(mb_left) )
    {   
        acess = true;
        pressed_first = current_time;
        num_total -= 1;
        if( num_total &lt; 0 )
        {
            num_total = max_limit;
        }
        separate_number(num_total);
    }
    if( mouse_check_button_released(mb_left) )
    {
        acess = false;
    }
    if( mouse_lastbutton == mb_left &amp;&amp; acess)
    {
        pressed_second = current_time;
        if( pressed_second - pressed_first &gt; 1000 )
        {
            num_total -= 1;
            if( num_total &lt; 0 )
            {
                num_total = max_limit;
            }
            separate_number(num_total);
            if( mouse_check_button_released(mb_left) )
            {
                acess = false;
            }
        }
    }
}
else if( !mouse_in_relion(x+186, y+5, x+237, y+41) )
{
    acess = false;
}
draw_sprite(spr_test, 0, x, y);
draw_sprite(spr_num, num_hundred, x+26, y+20);
draw_sprite(spr_num, num_ten, x+75, y+20);
draw_sprite(spr_num, num_one, x+129, y+20);

// 确定
if( mouse_in_relion(x+20, y+109, x+99, y+138) &amp;&amp; mouse_check_button_released(mb_left) )
{
    switch( trade_action )
    {
        case BUY:
            buying_item(choose_item, num_total);
            break;
        case SELL:
            //show_message(choose_item);
            selling_item(choose_item, num_total);
            break;
    }
    instance_destroy();
}

//取消 
if( mouse_in_relion(x+136, y+110, x+215, y+139) &amp;&amp; mouse_check_button_released(mb_left) )
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>125,125</point>
  </PhysicsShapePoints>
</object>
