<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.view_xviewprevious = view_xview;
global.view_yviewprevious = view_yview;
init_objdata(room);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.view_xviewprevious = view_xview;
global.view_yviewprevious = view_yview;

switch( global.character_index )
{
    case 1: play_object = obj_xiana;
            break;
    case 2: play_object = obj_zhi;
            break;
    default: exit;
}

{
    view_xview = play_object.x - view_wview/2;
    view_yview = play_object.y - view_hview/2;
    if( view_xview + view_wview &gt; room_width )
    {
        view_xview = room_width - view_wview;
    }
    if( view_xview &lt; 0 )
    {
        view_xview = 0;
    }
    if( view_yview + view_hview &gt; room_height )
    {
        view_yview = room_height - view_hview;
    }
    if( view_yview &lt; 0 )
    {
        view_yview = 0;
    }
}

if( view_xview != global.view_xviewprevious || view_yview != global.view_xviewprevious )
{
    with (Window)
    {
        x += view_xview - global.view_xviewprevious;
        y += view_yview - global.view_yviewprevious;
    }
    with(Button)
    {
        x += view_xview - global.view_xviewprevious;
        y += view_yview - global.view_yviewprevious;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
