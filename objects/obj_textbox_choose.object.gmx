<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 人物速度为零
Character.image_speed = 0;
// 创建并初始化表面
textbox_surface = surface_create(640,480);
surface_set_target(textbox_surface);
draw_clear_alpha(0,0);
surface_reset_target();
// 创建对话框时，解散背包按钮
instance_deactivate_object(Button);
// 关闭所有的UI
Window.visiable = false;

if( !global.textboxopened )
{
    global.textboxopened = true;
}

text_entire = global.textbox_text;
text_option1 = global.textbox_option1;
text_option2 = global.textbox_option2;
text_letter = "";
draw_x = 0;
draw_y = 0;
current_position = 1;
max_position = string_length(text_entire) + 1;
colour = c_white;
choose_switch = false;
choose_index = 0;
current_mission = 0;
arrowy = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(textbox_surface);
global.textbox_text = "";
Player.image_speed = 0.35;
// 结束对话后，激活所有UI
instance_activate_object(Button);
/*switch( global.choose_index )
{
    case 1:
        if( global.choose_index == 1 )
        {
            global.choose_index = 0;
            Player.image_index = 3;
            room_goto(rm_maze);
        }
        break;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_textbox_choose</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 执行对话时，人物停止不动
Player.image_speed = 0;
// 文本未全部显示完时
if( current_position &lt; max_position )
{
    // 当前对话框未被填满时
    if( draw_y &lt;= 60 )
    {
        // 从文本中复制一个字符
        text_letter = string_copy(text_entire, current_position, 1);
        // 判断这个字符的形式
        switch(text_letter)
        {
            case "~":
                colour = c_lime;
                break;
            case "]":
                colour = c_blue;
                break;
            case "^":
                colour = c_red;
                break;
            case "`":
                colour = c_white;
                break;
            // 强制换行
            case "%":
                draw_x = 0;
                draw_y += 20;//15
                break;
            // 强制进入下一页
            case "#":
                draw_x = 0;
                draw_y = 80;
                break;
            // 设置获得物品时的字体
            case "$":
                draw_set_font(font_getitems);
                break;
            // 对话时的字体
            case "@":
                draw_set_font(font_textbox);
                break;
            default:
                surface_set_target(textbox_surface);
                draw_text_colour(view_xport+draw_x+56, view_yport+draw_y+371, text_letter, colour, colour, colour, colour, 1);
                surface_reset_target();
                draw_x += string_width(text_letter);
                if( draw_x &gt;= 450 )//185
                {
                    draw_x = 0;
                    draw_y += 20;//15
                }
        }
        current_position += 1;
    }
}

if( current_position == max_position &amp;&amp; !global.endmessageplayed )
{
    global.endmessageplayed = true;
}

if( current_position == max_position &amp;&amp; sprite_exists(spr_choose_arrow) )
{
    if( keyboard_check_pressed( vk_enter ) )
    {
        if( current_mission != -1 )
        {
            switch( arrowy )
            {
                case 0:
                    global.mission[current_mission,2] = 1;
                    instance_destroy();
                    textbox(text_option1, c_white);
                    break;
                case 20:
                    global.mission[current_mission,2] = 0;
                    instance_destroy();
                    textbox(text_option2, c_white);
                    break;
            }
        }
        else
        {
            switch( arrowy )
            {
                case 0:
                    global.choose_index = 1;
                    instance_destroy();
                    global.endmessageplayed = false;
                    global.textboxopened = false;
                    break;
                case 20:
                    instance_destroy();
                    global.endmessageplayed = false;
                    global.textboxopened = false;
                    break;
            }
        }
    }
        global.endmessageplayed = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_stretched_ext(spr_textbox,  0, view_xview+50, view_yview+370, 500, 110, c_white, 0.65);
// 文本显示完成
if( current_position == max_position )
{
    arrow_exists = draw_sprite(spr_choose_arrow, 0, view_xview+75, view_yview+arrowy+410 );
}
draw_surface(textbox_surface, view_xview , view_yview);

// 单击鼠标左键，继续对话或结束对话
if( mouse_check_button_pressed(mb_left) &amp;&amp; keyboard_check(vk_enter) )
{
    // 当前对话框被文字填满时
    if( draw_y &gt;= 80 )
    {  
        // 销毁当前对话框
        instance_destroy();  
        // 重新创建一个新的对话框并从未显示完的地方继续显示    
        textbox(string_copy(text_entire, current_position, string_length(text_entire) - current_position+1), colour);
    }
}

// 选择选项
if( keyboard_check_pressed( ord('W') ) )
{
    arrowy = 0;
}
else if( keyboard_check_pressed( ord('S') ) )
{
    arrowy = 20;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
